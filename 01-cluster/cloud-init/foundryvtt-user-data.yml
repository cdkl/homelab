#cloud-config
package_upgrade: true
packages:
  - qemu-guest-agent
  - curl
  - wget
  - unzip
  - nginx
  - certbot
  - python3-certbot-nginx

runcmd:
  # Enable and start qemu-guest-agent
  - systemctl enable qemu-guest-agent
  - systemctl start qemu-guest-agent
  
  # Set non-interactive mode for package installation
  - export DEBIAN_FRONTEND=noninteractive
  - export NEEDRESTART_MODE=a
  
  # Install Node.js 20.x (required for FoundryVTT) with error handling
  - curl -fsSL https://deb.nodesource.com/setup_20.x | bash - || echo "NodeSource setup failed, continuing..."
  - apt-get update
  - apt-get install -y nodejs || (echo "NodeSource nodejs failed, trying Ubuntu nodejs" && apt-get install -y nodejs npm)
  
  # Create FoundryVTT user and directories
  - useradd -m -s /bin/bash foundryvtt
  - mkdir -p /opt/foundryvtt/app
  - mkdir -p /opt/foundryvtt/data
  - chown -R foundryvtt:foundryvtt /opt/foundryvtt
  
  # Install PM2 for process management (if npm is available)
  - which npm && npm install -g pm2 || echo "NPM not available, skipping PM2"
  
  # Create systemd service for FoundryVTT
  - systemctl daemon-reload

# Set password authentication to false for security
ssh_pwauth: false

# Default user configuration (matches your existing pattern)
user: bunker
groups: [sudo]
shell: /bin/bash
sudo: ALL=(ALL) NOPASSWD:ALL

write_files:
  - path: /etc/systemd/system/foundryvtt.service
    content: |
      [Unit]
      Description=FoundryVTT Server
      After=network.target
      
      [Service]
      Type=simple
      User=foundryvtt
      Group=foundryvtt
      WorkingDirectory=/opt/foundryvtt/app
      ExecStart=/usr/bin/node /opt/foundryvtt/app/main.js --dataPath=/opt/foundryvtt/data --port=30000
      Restart=always
      RestartSec=10
      Environment=NODE_ENV=production
      
      [Install]
      WantedBy=multi-user.target
    owner: root:root
    permissions: '0644'
    
  - path: /etc/nginx/sites-available/foundryvtt
    content: |
      server {
          listen 80;
          server_name foundryvtt.cdklein.com;
          return 301 https://$server_name$request_uri;
      }

      server {
          listen 443 ssl http2;
          server_name foundryvtt.cdklein.com;

          # SSL configuration will be handled by certbot
          # ssl_certificate and ssl_certificate_key will be added by certbot

          location / {
              proxy_pass http://localhost:30000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # WebSocket support for FoundryVTT
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              
              # Increase proxy timeout for large file uploads
              proxy_read_timeout 300s;
              proxy_connect_timeout 75s;
          }
      }
    owner: root:root
    permissions: '0644'
